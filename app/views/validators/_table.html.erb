<table id="validators-table" class='table table-block-sm'>
  <thead>
  <tr>
    <th class="column-info align-middle">
      <div class="column-info-row">
        <% if show_watchlist_btn %>
          <div class="column-info-avatar">
            <%= link_to url_for(
                          order: params[:order],
                          page: 1,
                          network: params[:network],
                          refresh: params[:refresh],
                          watchlist: params[:watchlist] ? nil : true) do %>
              <i class="<%= params[:watchlist] ? 'fas' : 'far' %> fa-star text-warning"
                 data-bs-toggle="tooltip"
                 data-bs-placement="top"
                 title="<%= params[:watchlist] ? 'Show all' : 'Show favourites' %>">
              </i>
            <% end %>
          </div>
        <% end %>
        <div class="column-info-name">
          Name <small class="text-muted">(Commission)</small>
          <i class="fas fa-info-circle font-size-xs text-muted ms-1"
             data-bs-toggle="tooltip"
             data-bs-placement="top"
             title="<%= t('definitions.commission') %>">
          </i>
          <br />
          Scores <small class="text-muted">(total)</small>
          <i class="fas fa-info-circle font-size-xs text-muted ms-1"
             data-bs-toggle="tooltip"
             data-bs-placement="top"
             title="<%= t('definitions.scores') %>">
          </i>
          <br/>
          <% if show_ip_and_gateway %>
            IP & Gateway <br />
          <% end %>
          Active Stake <small class="text-muted">(% of total)</small>
          <i class="fas fa-info-circle font-size-xs text-muted ms-1"
             data-bs-toggle="tooltip"
             data-bs-placement="top"
             title="<%= t('definitions.active_stake') %>">
          </i>
        </div>
      </div>
    </th>

    <th class='column-speedometer align-middle pe-0'>
      Skipped Vote&nbsp;&percnt;
      <i class="fas fa-info-circle font-size-xs text-muted ms-1"
         data-bs-toggle="tooltip"
         data-bs-placement="top"
         title="<%= t('definitions.skipped_vote') %>">
      </i>
      <br />
      <small class="text-muted">Dist from leader</small>
    </th>

    <th class='column-chart py-3 align-middle'>
      Root Distance
      <i class="fas fa-info-circle font-size-xs text-muted ms-1"
         data-bs-toggle="tooltip"
         data-bs-placement="top"
         title="<%= t('definitions.root_distance') %>">
      </i>
      <br />
      <small class="text-muted">60-Min Chart</small>
    </th>

    <th class='column-chart py-3 align-middle'>
      Vote Distance
      <i class="fas fa-info-circle font-size-xs text-muted ms-1"
         data-bs-toggle="tooltip"
         data-bs-placement="top"
         title="<%= t('definitions.vote_distance') %>">
      </i>
      <br />
      <small class="text-muted">60-Min Chart</small>
    </th>

    <th class='column-chart py-3 align-middle'>
      Skipped Slot&nbsp;&percnt;
      <i class="fas fa-info-circle font-size-xs text-muted ms-1"
         data-bs-toggle="tooltip"
         data-bs-placement="top"
         title="<%= t('definitions.skipped_slot') %>">
      </i>
      <br />
      <small class="text-muted">60-Min Chart</small>
    </th>
  </tr>
  </thead>

  <tbody>
  <% i = [params[:page].to_i - 1, 0].max * items_per_page %>
  <% validators.each do |validator| %>
    <% i += 1 %>
    <tr id="row-<%= i %>">
      <td class="column-info align-middle">
        <div class="column-info-row">
          <div class="column-info-avatar <%= 'no-watchlist' unless (current_user && show_watchlist_btn) %>">
            <%= create_avatar_link(validator) %>
            <% if current_user && show_watchlist_btn %>
              <i class="watch-button <%= validator.watchers.include?(current_user) ? 'fas' : 'far' %> fa-star"
                 data-bs-toggle="tooltip"
                 data-bs-placement="top"
                 data-network="<%= validator.network%>"
                 data-account="<%= validator.account%>"
                 title="<%= validator.watchers.include?(current_user) ? 'Remove from favourites' : 'Add to favourites' %>">
              </i>
            <% end %>
          </div>
          <div class="column-info-name">
            <%= link_to validator_url(network: params[:network], account: validator.account, order: params[:order], page: params[:page], refresh: params[:refresh]),
                        class: 'fw-bold' do %>
              <%= validator_display_name(validator) %>
            <% end %>
            <% unless validator.private_validator? && !validator.lido? %>
              <small class="ms-1 text-muted">
                (<span class="d-inline-block d-lg-none">Commission:&nbsp;</span><%= validator.commission %>%)
              </small>
            <% end %>
            <br/>
            <span class="d-inline-block d-lg-none">Scores:&nbsp;</span>
            <%= render 'validators/scores', validator: validator %>
          </div>
        </div>

        <div class="mt-3">
          <% if show_ip_and_gateway %>
            <div class="small text-muted">
              <span class="d-inline-block d-lg-none">IP:&nbsp;</span>
              <%= validator.score.ip_address %>
            </div>
            <div class="small text-muted">
              <% data_center_host = validator&.data_center_host&.host %>
              <% if data_center_host %>
                <span class="d-inline-block d-lg-none">Gateway:&nbsp;</span>
                <%= data_center_host %>
              <% end %>
            </div>
          <% end %>

          <div class="d-sm-inline-block">
            <span class="d-inline-block d-lg-none">Active Stake:&nbsp;</span>
            <span class="me-4">
            <%= number_with_delimiter lamports_to_sol(validator.active_stake).round(0) %>
              <small class="text-muted">
              (<%= number_to_percentage(validator.stake_concentration.to_f * 100.0, precision: 1) %>)
            </small>
          </span>
          </div>
          V:&nbsp;<%= validator.score&.software_version %>

          <% if validator.delinquent? || validator.score.authorized_withdrawer_score == -2 || validator.admin_warning %>
            <div class="mt-2">
              <% if validator.delinquent? %>
                <small class="text-danger me-2">delinquent</small>
              <% end %>
              <% if validator.score.authorized_withdrawer_score == -2 %>
                <%= link_to '/faq#withdraw-authority-warning', title: "Withdrawer matches validator identity." do %>
                  <small class="text-warning me-2">withdrawer</small>
                <% end %>
              <% end %>
              <% if validator.admin_warning %>
                <%= link_to '/faq#admin-warning', title: "#{validator.admin_warning}" do %>
                  <small class="text-danger">warning</small>
                <% end %>
              <% end %>
            </div>
          <% end %>
        </div>
      </td>

      <td class="column-speedometer align-middle">
        <% skipped_vote_percent = skipped_vote_percent(validator, batch) %>
        <% if skipped_vote_percent %>
          <div class="d-none d-lg-block">
            <%= render 'validators/speedometer_chart',
                       canvas_name: "spark_line_skipped_vote_#{validator.account}",
                       value: [skipped_vote_percent, batch.skipped_vote_all_median.to_f * 3].max,
                       chart_steps: [batch.skipped_vote_all_median.to_f * 2, batch.skipped_vote_all_median.to_f, 0.05],
                       min_value: batch.skipped_vote_all_median.to_f * 3,
                       max_value: 0.05
            %>
            <div class="text-center text-muted small mt-2">
              <%= number_to_percentage(skipped_vote_percent, precision: 2) %>
            </div>
          </div>
        <% else %>
          <span class="d-none d-lg-block text-center text-muted">N/A</span>
        <% end %>
        <span class="d-inline-block d-lg-none">
          Skipped Vote&nbsp;%:
          <%= skipped_vote_percent ? number_to_percentage(skipped_vote_percent, precision: 2) : "N/A" %>
        </span>
      </td>

      <td class="d-lg-none pt-0">
        <div class="row mb-3">
          <div class="col pe-0">
            <a class="chart-link" data-iterator="<%=i%>" data-bs-target="root-distance" href="">
              Root <br class="d-xxs-inline-block" />Distance
            </a>
          </div>
          <div class="col pe-0">
            <a class="chart-link" data-iterator="<%=i%>" data-bs-target="vote-distance" href="">
              Vote <br class="d-xxs-inline-block" />Distance
            </a>
          </div>
          <div class="col">
            <a class="chart-link" data-iterator="<%=i%>" data-bs-target="skipped-slots" href="">
              Skipped <br class="d-xxs-inline-block" />Slots
            </a>
          </div>
        </div>
      </td>
      <!-- ROOT DISTANCE -->
      <td class="column-chart d-none d-lg-table-cell align-middle" id="root-distance-<%=i%>">
        <%
          vl = chart_x_scale(validator.score&.root_distance_history.to_a.count)
          line_color = chart_line_color(validator.root_distance_score)
          fill_color = chart_fill_color(validator.root_distance_score)
          vector = validator.score&.root_distance_history.to_a[-vl..-1]
        %>
        <% max_value = vector&.max %>
        <% if max_value && max_value > Y_ROOT_DISTANCE_MAX %>
          <% max_value_position = max_value_position(vector) %>
          <% max_value_position_mobile = max_value_position(vector, min_position: false) %>
          <div class="chart-top-container">
            <div class="chart-top-value d-lg-none" style="width: <%=max_value_position_mobile%>">
              <%= max_value %>
            </div>
            <div class="chart-top-value d-none d-lg-block" style="width: <%=max_value_position%>">
              <%= max_value %>
            </div>
          </div>
        <% end %>
        <%= render 'validators/spark_line_block_distance',
                   account: validator.account,
                   vector: vector,
                   line_color: line_color,
                   fill_color: fill_color
        %>
      </td>

      <!-- VOTE DISTANCE -->
      <td class="column-chart d-none d-lg-table-cell align-middle" id=vote-distance-<%=i%>>
        <%
          vl = chart_x_scale(validator.score&.vote_distance_history.to_a.count)
          line_color = chart_line_color(validator.vote_distance_score)
          fill_color = chart_fill_color(validator.vote_distance_score)
          vote_vector = validator.score&.vote_distance_history.to_a[-vl..-1]
        %>
        <% max_value = vote_vector&.max %>
        <% if max_value && max_value > Y_VOTE_DISTANCE_MAX %>
          <% max_value_position = max_value_position(vote_vector) %>
          <% max_value_position_mobile = max_value_position(vote_vector, min_position: false) %>
          <div class="chart-top-container">
            <div class="chart-top-value d-lg-none" style="width: <%=max_value_position_mobile%>">
              <%= max_value %>
            </div>
            <div class="chart-top-value d-none d-lg-block" style="width: <%=max_value_position%>">
              <%= max_value %>
            </div>
          </div>
        <% end %>
        <%= render 'validators/spark_line_vote_distance',
                   account: validator.account,
                   vector: vote_vector,
                   line_color: line_color,
                   fill_color: fill_color
        %>
      </td>

      <!-- SKIPPED SLOTS  -->
      <td class="column-chart d-none d-lg-table-cell align-middle" id="skipped-slots-<%=i%>">
        <%
          vl = chart_x_scale(validator.score&.skipped_slot_history.to_a.count)
          ma = chart_x_scale(validator.score&.skipped_slot_moving_average_history.to_a.count)

          skipped_slots_moving_avg = validator.score&.skipped_slot_moving_average_history.to_a[-ma..-1]&.map { |v| (v.to_f*100.0).round(1) }
          slot_vector = validator.score&.skipped_slot_history.to_a[-vl..-1].map { |v| (v.to_f*100.0).round(1) }

          line_color = chart_line_color(validator.skipped_slot_score)
          fill_color = chart_fill_color(validator.skipped_slot_score)
        %>
        <%= render 'validators/spark_line_skipped_slots',
                   account: validator.account,
                   vector: slot_vector,
                   line_color: line_color,
                   fill_color: fill_color,
                   moving_avg: skipped_slots_moving_avg
        %>
      </td>
    </tr>

    <% at_33_stake_index ||= nil %>
    <% if at_33_stake_index && i == at_33_stake_index %>
      <tr class="heading-secondary text-center">
        <td colspan="6" class="p-3">
          Cumulative stake above can halt the network&nbsp;&#8212;&nbsp;improve decentralization
          and delegate to validators below
        </td>
      </tr>
    <% end %>

  <% end %>
  </tbody>
</table>
