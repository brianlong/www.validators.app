<p id="notice"><%= notice %></p>
<!--
  {"network":"mainnet","epoch":54,"batch_uuid":"d15cc021-8200-4b29-82a2-43a1ff333247","batch_created_at":"2020-07-20T00:22:05.004Z","previous_batch_uuid":"a362c907-1382-421a-991a-aec47e9468f5","validator_account":"GdnSyH3YtwcxFvQrVVJMm1JhTS4QVX7MFsX56uJLUfiZ","validator_delinquent":false,"validator_vote_account":"sCtiJieP8B3SwYnXemiLpRFRR8KJLMtsMVN25fAFWjW","validator_commission":100,"validator_last_vote":23551929,"validator_root_block":23551898,"validator_credits":21606796,"validator_active_stake":11476617084384080,"tower_highest_block":23551899,"tower_cluster_median_behind_leader":1,"tower_cluster_average_behind_leader":"468218.3309","tower_blocks_behind_leader":1,"tower_highest_vote":23551930,"tower_cluster_median_vote_behind_leader":1,"tower_cluster_average_vote_behind_leader":"468218.0956","tower_votes_behind_leader":1,"validator_epoch_leader_slots":19440,"validator_epoch_blocks_produced":19265,"validator_epoch_skipped_slots":175,"validator_epoch_skipped_slot_percent":0.009,"validator_epoch_skipped_slots_after":478,"validator_epoch_skipped_slots_after_percent":0.0246,"cluster_epoch_skipped_slot_percent_average":0.009,"cluster_epoch_skipped_slot_percent_median":0.009,"validator_batch_leader_slots":276,"validator_batch_blocks_produced":274,"validator_batch_skipped_slots":2,"validator_batch_skipped_slot_percent":0.007246376811594203,"validator_batch_skipped_slots_after":28,"validator_batch_skipped_slots_after_percent":0.10144927536231885,"software_version":"1.1.19 e651209f","cluster_epoch_start_slot":23328000,"cluster_epoch_end_slot":23551916,"cluster_epoch_total_slots":223917,"cluster_epoch_total_blocks_produced":215701,"cluster_epoch_total_slots_skipped":8216,"cluster_epoch_skipped_slot_percent":0.03669216718694873,"ping_times_min_ms":null,"ping_times_avg_ms":null,"ping_times_max_ms":null,"ping_times_cluster_average_ms":null}
-->
<h1><%= params[:network].capitalize%> Validators</h1>
<div class="row">
  <div class="col-lg-12">
    <p>
      Color Legend: Green = above the median; Yellow = between the median and average; Red = below average. Ping 'N/A' means the node is not responding to ping/ICMP. (Stats not available if the validator has not taken a turn as leader).
    </p>
  </div>
</div>
<% if @feed_zone %>
  <div class="row">
    <div class="col-lg-12">
      <table id="validators-table" class='table table-striped'>
        <thead class="thead-dark">
          <tr>
            <th>&nbsp;</th>
            <th>Name<br />ActiveStake<br />Software (<%= Rails.application.credentials.solana["software_patch_#{params[:network]}".to_sym] %>)</th>
            <th class='text-right'>Root Block<br />Distance</th>
            <th class='text-right'>Vote<br />Distance</th>
            <th class='text-right'>Skipped<br />Slot &percnt;</th>
            <th class='text-right'>Skipped<br />After Slot &percnt;</th>
            <th class='text-right'>Average<br />Ping Time (ms)</th>
          </tr>
        </thead>

        <tbody>
          <tr>
            <% fz_first = @feed_zone.payload.first %>
            <td colspan="2">
              Cluster Height/Stats:<br />
              Epoch: <%= fz_first['epoch'] %>
            </td>
            <td class='text-right'><%= number_with_delimiter fz_first['tower_highest_block'] %></td>
            <td class='text-right'><%= number_with_delimiter fz_first['tower_highest_vote'] %></td>
            <td class='text-right'>
              Med: <%= number_to_percentage(fz_first['cluster_epoch_skipped_slot_percent_median'].to_f * 100.0) %><br />
              Avg: <%= number_to_percentage(fz_first['cluster_epoch_skipped_slot_percent'].to_f * 100.0) %>
            </td>
            <td class='text-right'>
              Med: <%= number_to_percentage(fz_first['cluster_epoch_skipped_slot_percent_median'].to_f * 100.0) %><br />
              Avg: <%= number_to_percentage(fz_first['cluster_epoch_skipped_slot_percent'].to_f * 100.0) %>
            </td>
            <td class='text-right'>
              Avg: <%= fz_first['ping_times_cluster_average_ms'].nil? ? 'N/A' : fz_first['ping_times_cluster_average_ms'].to_f.round(1)  %>
            </td>
          </tr>
          <% @feed_zone.payload.each do |fz| %>
            <tr>
              <td class="<%= 'bg-red' if fz['validator_delinquent'] == true %>">
                <span class="avatar">
                  <% if fz['validator_avatar_url'] %>
                    <%= image_tag fz['validator_avatar_url'], class: 'img-circle' %>
                  <% else %>
                    <%= image_tag 'https://keybase.io/images/no-photo/placeholder-avatar-180-x-180@2x.png', class: 'img-circle' %>
                  <% end %>
                </span>
                </td>
                <td class="<%= 'bg-red' if fz['validator_delinquent'] == true %>">
                <%
                  validator_name = if fz['validator_name']
                    fz['validator_name']
                  else
                    shorten_key(fz['validator_account'])
                  end
                %>
                  <%= link_to validator_name, validator_url(network: params[:network], account: fz['validator_account']) %><br />
                  <small><%= number_with_delimiter lamports_to_sol(fz['validator_active_stake']) %></small>
                  <br />
                  <small  class="<%= software_color_class(fz['software_version']) %>">
                    <%= fz['software_version'] || 'N/A' %>
                  </small>

              </td>

              <%
                # Calculate the backgroud color
                tower_background = if fz['tower_blocks_behind_leader'].to_i <= fz['tower_cluster_median_behind_leader'].to_i
                  'bg-green'
                elsif (fz['tower_blocks_behind_leader'].to_i > fz['tower_cluster_median_behind_leader'].to_i) && (fz['tower_blocks_behind_leader'].to_i < fz['tower_cluster_average_behind_leader'].to_i)
                    'bg-yellow'
                  else
                    'bg-red'
                  end
               %>
              <td class="<%= tower_background %> text-right">
                <%= fz['tower_blocks_behind_leader'] %>
              </td>
              <%
              # Calculate the backgroud color
              vote_background = if fz['tower_votes_behind_leader'].to_i <= fz['tower_cluster_median_vote_behind_leader'].to_i
                'bg-green'
              elsif (fz['tower_votes_behind_leader'].to_i > fz['tower_cluster_median_vote_behind_leader'].to_i) && (fz['tower_votes_behind_leader'].to_i < fz['tower_cluster_average_vote_behind_leader'].to_i)
                  'bg-yellow'
                else
                  'bg-red'
                end
               %>
              <td class="<%= vote_background %> text-right">
                <%= fz['tower_votes_behind_leader'] %>
              </td>

              <%
                # Calculate the backgroud color
                skipped_background = if
                  fz['validator_epoch_skipped_slot_percent'].to_f <= fz['cluster_epoch_skipped_slot_percent_median'].to_f
                    'bg-green'
                elsif
                  fz['validator_epoch_skipped_slot_percent'].to_f > fz['cluster_epoch_skipped_slot_percent'].to_f
                  'bg-red'
                else
                  'bg-yellow'
                end
               %>

              <td class="<%= skipped_background %> text-right">
                <%=
                  number_to_percentage(fz['validator_epoch_skipped_slot_percent'].to_f * 100.0)
                 %>
              </td>

              <%
                after_bg_color = if
                  fz['validator_epoch_skipped_slots_after_percent'].to_f <= fz['cluster_epoch_skipped_slot_percent_median'].to_f
                    'bg-green'
                elsif
                  fz['validator_epoch_skipped_slots_after_percent'].to_f > fz['cluster_epoch_skipped_slot_percent'].to_f
                  'bg-red'
                else
                  'bg-yellow'
                end
               %>
              <td class="<%= after_bg_color %> text-right">
                <%=
                  number_to_percentage(fz['validator_epoch_skipped_slots_after_percent'].to_f * 100.0)
                %>
              </td>

              <%
                ping_bg_color = if fz['ping_times_avg_ms'].nil?
                  'bg-red'
                elsif fz['ping_times_avg_ms'].to_f <= fz['ping_times_cluster_average_ms'].to_f
                  'bg-green'
                else
                  'bg-yellow'
                end
               %>
              <td class="<%= ping_bg_color %> text-right">
                <%= fz['ping_times_avg_ms'].nil? ? 'N/A' : fz['ping_times_avg_ms'].to_f.round(1)  %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
      <small>Data updated at <%= @feed_zone.batch_created_at %> in batch <%= @feed_zone.batch_uuid %></small>
    </div>
  </div>
<% end %>
<hr />
<% if @software_versions %>
  <h3>Software Versions</h3>
  <div class="row">
    <div class="col-lg-12">
      <table class="table table-striped">
        <thead class="thead-dark">
          <tr>
            <th>Software Version</th>
            <th>Count</th>
          </tr>
        </thead>
        <tbody>
          <% @software_versions.payload.each do |group| %>
            <tr>
              <td><%= group.first[0] %></td>
              <td><%= group.first[1] %></td>
            </tr>
          <% end %>
        </tbody>

      </table>
    </div>
  </div>
<% end %>
