<%= render 'validators/banner' %>
<% unless @validators.empty? %>
  <div class="card">
    <div class="card-content pb-0">
      <h1 class="h2 card-heading">Solana <%= params[:network].capitalize%> Validators</h1>

      <%= render 'validators/sort_bar' %>

      <div class="row">
        <div class="col-md-9 col-lg-10">
          <p class="small muted">
            Data updated at <%= @batch&.created_at || 'N/A' %> in batch <%= @batch&.uuid || 'N/A' %>. <%= link_to 'See Data Centers', data_centers_url(network: params[:network]) %>
          </p>
        </div>
        <div class='col-md-3 col-lg-2 toggle-container'>
          <% if params[:refresh] == 'true' %>
            <%= link_to raw('<i class="fas fa-toggle-on toggle"></i>'), url_for(order: params[:order], page: params[:page], network: params[:network], q: params[:q], refresh: false) %>
            <p class="small muted">REFRESH ON</p>
          <% else %>
            <%= link_to raw('<i class="fas fa-toggle-off toggle"></i>'), url_for(order: params[:order], page: params[:page], network: params[:network], q: params[:q], refresh: true) %>
            <p class="small muted toggle-label">REFRESH OFF</p>
          <% end %>
        </div>
      </div>
    </div>


    <div class="row">
      <div class="col-sm-12">
        <table id="validators-table" class='table table-striped table-borderless'>
          <thead>
          <tr>
            <th class="avatar-column">#</th>
            <th class="name-column">
              Name <small class="text-muted">(Commission)</small><br />
              Active Stake <small class="text-muted">(<%= number_to_human(lamports_to_sol(@total_active_stake)) %>)</small><br />
              Software
              <small class="text-muted">
                (
                <% if params[:network] == 'mainnet' %>
                  <%= MAINNET_CLUSTER_VERSION %>
                <% else %>
                  <%= TESTNET_CLUSTER_VERSION %>
                <% end %>
                )
              </small>
              <br />
              Scores <small class="text-muted">(total)</small>
            </th>
            <th class='chart-column text-right'>
              Root Distance<br />
              <small class="text-muted">60-Min Chart</small>
            </th>
            <th class='chart-column text-right'>
              Vote Distance<br />
              <small class="text-muted">60-Min Chart</small>
            </th>
            <th class='chart-column text-right'>
              Skipped Slot &percnt;<br />
              <small class="text-muted">60-Min Chart</small>
            </th>
            <th class='text-right'>
              Skipped Vote &percnt;<br />
              <small class="text-muted">(Distance from leader)</small>
            </th>
          </tr>
          </thead>

          <tbody>
          <tr>
            <td colspan="2" class="avatar-column text-left">
              Cluster Height/Stats:<br />
              Epoch: <%= @this_epoch&.epoch %>
            </td>
            <td class='text-right name-column'>
              <%= number_with_delimiter @tower_highest_block %>
            </td>
            <td class='text-right'>
              <%= number_with_delimiter @tower_highest_vote %>
            </td>
            <td class='text-right'>
              Md: <%= number_to_percentage(@skipped_slot_median.to_f * 100.0, precision: 1) %><br />
              Av: <%= number_to_percentage(@skipped_slot_average.to_f * 100.0, precision: 1) %>
            </td>
            <td class='text-right'>
              Min: <%= number_to_percentage(@skipped_vote_percent_best.to_f * 100.0, precision: 2) %>
            </td>
          </tr>
          <%
            i = if params[:page].nil? || params[:page].empty? || params[:page].to_i.zero?
                  0
                else
                  (params[:page].to_i - 1) * Kaminari.config.default_per_page
                end
          %>
          <% @validators.each do |validator| %>
            <% i += 1 %>
            <tr>
              <td class="avatar-column p-0">
                <div class="number">
                  <%=
                    link_to i, validator_url(
                      network: params[:network],
                      account: validator.account,
                      order: params[:order],
                      page: params[:page],
                      refresh: params[:refresh]
                    )
                  %>
                </div>
                <div class="avatar">
                  <% if validator.avatar_url %>
                    <%= image_tag validator.avatar_url, class: 'img-circle-medium' %>
                  <% else %>
                    <%= image_tag 'https://keybase.io/images/no-photo/placeholder-avatar-180-x-180@2x.png', class: 'img-circle-medium' %>
                  <% end %>
                </div>
                <% if validator.delinquent? %>
                  <br />
                  <small class="score-minus-2">DELINQUENT</small>
                <% end %>
              </td>
              <td class="name-column">
                <%
                  validator_name = if validator.name
                                     validator.name
                                   else
                                     shorten_key(validator.account)
                                   end
                %>
                <%= link_to validator_name,
                            validator_url(
                              network: params[:network],
                              account: validator.account,
                              order: params[:order],
                              page: params[:page],
                              refresh: params[:refresh]
                            ) %>
                <%
                  comm_class = 'text-danger' \
                        if params[:network] == 'mainnet' && validator.commission.to_i == 100
                %>
                <small class="<%= comm_class %>">(<%= validator.commission %>%)</small><br />
                <small>
                  <%= number_with_delimiter lamports_to_sol(validator.active_stake) %>
                  (<%= number_to_percentage(validator.stake_concentration.to_f * 100.0, precision: 1) %>)
                </small>
                <br />
                <small class="<%= software_color_class(validator.software_version) %>">
                  <%= validator.software_version || 'N/A' %>
                </small>
                <br />
                <small>
                  <i class="fas fa-circle score-<%= validator.root_distance_score %>"
                     title="Root Distance Score = <%= validator.root_distance_score %>"></i>&nbsp;
                  <i class="fas fa-circle score-<%= validator.vote_distance_score %>"
                     title="Vote Distance Score = <%= validator.vote_distance_score %>"></i>&nbsp;
                  <i class="fas fa-circle score-<%= validator.skipped_slot_score %>"
                     title="Skipped Slot Score = <%= validator.skipped_slot_score %>"></i>&nbsp;

                  <i class="fas fa-circle score-<%= validator.published_information_score.to_i %>"
                     title="Published Information Score = <%= validator.published_information_score.to_i %>"></i>&nbsp;

                  <i class="fas fa-circle score-<%= validator.software_version_score %>"
                     title="Software Version Score = <%= validator.software_version_score %>"></i>&nbsp;

                  <i class="fas fa-circle score-<%= validator.security_report_score.to_i %>"
                     title="Security Report Score = <%= validator.security_report_score.to_i %>"></i>&nbsp;

                  <% if validator.stake_concentration_score < 0 %>
                    <%
                      score_class = if validator.stake_concentration_score == -2
                                      'score-minus-2'
                                    else
                                      'score-minus-1'
                                    end
                    %>
                    <i class="fas fa-minus-circle <%= score_class %>" title="Stake Concentration Score = <%= validator.stake_concentration_score %>"></i>&nbsp;
                  <% end %>
                  <% if validator.data_center_concentration_score < 0 %>
                    <%
                      score_class = if validator.data_center_concentration_score == -2
                                      'score-minus-2'
                                    else
                                      'score-minus-1'
                                    end
                    %>
                    <i class="fas fa-minus-circle <%= score_class %>" title="Data Center Concentration Score = <%= validator.data_center_concentration_score %>"></i>&nbsp;
                  <% end %>
                  (<%= validator.total_score %>)
                </small>
              </td>

              <!-- ROOT DISTANCE -->
              <td class="chart-column text-right">
                <%
                  vl = if validator.score&.root_distance_history.to_a.count < 60
                         validator.score&.root_distance_history.to_a.count
                       else
                         60
                       end
                  line_color = if validator.root_distance_score == 2
                                 '#00bf72'
                               elsif validator.root_distance_score == 1
                                 '#0091f2'
                               else
                                 '#cacaca'
                               end
                  vector = validator.score&.root_distance_history.to_a[-vl..-1]
                %>
                <%= render 'validators/spark_line_block_distance',
                           account: validator.account,
                           vector: vector,
                           line_color: line_color
                %>
              </td>

              <!-- VOTE DISTANCE -->
              <td class="chart-column text-right">
                <%
                  vl = if validator.score&.vote_distance_history.to_a.count < 60
                         validator.score&.vote_distance_history.to_a.count
                       else
                         60
                       end
                  line_color = if validator.vote_distance_score == 2
                                 '#00bf72'
                               elsif validator.vote_distance_score == 1
                                 '#0091f2'
                               else
                                 '#cacaca'
                               end
                  vote_vector = validator.score&.vote_distance_history.to_a[-vl..-1]
                %>
                <%= render 'validators/spark_line_vote_distance',
                           account: validator.account,
                           vector: vote_vector,
                           line_color: line_color
                %>
              </td>

              <!-- SKIPPED SLOTS  -->
              <td class="chart-column text-right">
                <%
                  vl = if validator.score&.skipped_slot_history.to_a.count < 60
                         validator.score&.skipped_slot_history.to_a.count
                       else
                         60
                       end
                  line_color = if validator.skipped_slot_score == 2
                                 '#00bf72'
                               elsif validator.skipped_slot_score == 1
                                 '#0091f2'
                               else
                                 '#cacaca'
                               end
                  slot_vector = validator.score&.skipped_slot_history.to_a[-vl..-1].map {|v| (v.to_f*100.0).round(1)}
                %>
                <%= render 'validators/spark_line_skipped_slots',
                           account: validator.account,
                           vector: slot_vector,
                           line_color: line_color
                %>
              </td>

              <td class="text-right">
                <%
                  vahl = validator.vote_account_last&.vote_account_history_last
                  if vahl
                    skipped_votes_percent = (vahl.slot_index_current.to_i - vahl.credits_current.to_i)/vahl.slot_index_current.to_f
                  end
                %>
                <%=
                  number_to_percentage(
                    (@skipped_vote_percent_best - skipped_votes_percent)*100.0,
                    precision: 2
                  ) if vahl
                  # number_to_percentage(
                  #   ((vahl.slot_index_current.to_i - vahl.credits_current.to_i)/vahl.slot_index_current.to_f)*100.0,
                  #   precision: 2
                  # ) if vahl
                %>
              </td>
            </tr>
          <% end %>
          </tbody>
        </table>

        <div class="px-15">
          <p class="small muted">Data updated at <%= @batch&.created_at || 'N/A' %> in batch <%= @batch&.uuid || 'N/A' %></p>
          <%= paginate @validators, theme: 'bootstrap4' %>
        </div>


      </div>
    </div>
  </div>
<% end %>
<%= render 'validators/software_versions' %>