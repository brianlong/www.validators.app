<%= render 'validators/banner' %>

<% unless @validators.empty? %>
  <div class="card">
    <div class="card-content pb-0">
      <h1 class="h2 card-heading">Solana <%= params[:network].capitalize %> Validators</h1>

      <%= render 'validators/sort_bar' %>

      <div class="row">
        <div class="col-md-9 col-lg-10">
          <p class="small muted">
            Score updated at <%= @batch&.created_at || 'N/A' %> in batch <%= @batch&.uuid || 'N/A' %>.
            <%= link_to 'See Data Centers', data_centers_url(network: params[:network]) %>
          </p>
        </div>
        <div class='col-md-3 col-lg-2 toggle-container'>
          <% if params[:refresh] == 'true' %>
            <%= link_to raw('<i class="fas fa-toggle-on toggle"></i>'),
                        url_for(order: params[:order], page: params[:page], network: params[:network], q: params[:q], refresh: false) %>
            <p class="small muted toggle-label">Refresh ON</p>
          <% else %>
            <%= link_to raw('<i class="fas fa-toggle-off toggle"></i>'),
                        url_for(order: params[:order], page: params[:page], network: params[:network], q: params[:q], refresh: true) %>
            <p class="small muted toggle-label">Refresh OFF</p>
          <% end %>
        </div>
      </div>
    </div>


    <div class="row">
      <div class="col-sm-12">
        <table id="validators-table" class='table table-block-sm'>
          <thead>
          <tr>
            <th class="avatar-column align-middle">#</th>
            <th class="name-column align-middle">
              Name <small class="text-muted">(Commission)</small><br />
              Active Stake
              <small class="text-muted">
                (<%= number_to_human(lamports_to_sol(@total_active_stake),
                                     format:'%n%u',
                                     units: { thousand: 'K', million: 'M', billion: 'B' }) %>)
              </small><br />
              Scores <small class="text-muted">(total)</small>
            </th>
            <th class='chart-column align-middle'>
              Skipped Vote&nbsp;&percnt;<br />
              <small class="text-muted">Distance from leader</small>
            </th>
            <th class='chart-column align-middle'>
              Root Distance<br />
              <small class="text-muted">Distance from leader</small>
            </th>
            <th class='chart-column align-middle'>
              Vote Distance<br />
              <small class="text-muted">Distance from leader</small>
            </th>
            <th class='chart-column align-middle'>
              Skipped Slot&nbsp;&percnt;<br />
              <small class="text-muted">Distance from leader</small>
            </th>
          </tr>

          <tr class="subhead">
            <td class="avatar-column"></td>
            <td></td>
            <td class="align-middle">
              Best: <%= number_to_percentage((100 - @batch.best_skipped_vote.to_f * 100.0), precision: 2) %>
            </td>
            <td class="align-middle">
              <% if @batch.root_distance_all_median && @batch.root_distance_all_average %>
                Md: <%= @batch.root_distance_all_median %>
                <br />
                Av: <%= @batch.root_distance_all_average.round(1) %>
              <% end %>
            </td>
            <td class="align-middle">
              <% if @batch.vote_distance_all_median && @batch.vote_distance_all_average %>
                Md: <%= @batch.vote_distance_all_median %>
                <br />
                Av: <%= @batch.vote_distance_all_average.round(1) %>
              <% end %>
            </td>
            <td class="align-middle">
              Md: <%= number_to_percentage(@skipped_slot_median.to_f * 100.0, precision: 1) %>
              <br />
              Av: <%= number_to_percentage(@skipped_slot_average.to_f * 100.0, precision: 1) %>
            </td>
          </tr>
          </thead>

          <tbody>
          <%
            i = if params[:page].nil? || params[:page].empty? || params[:page].to_i.zero?
                  0
                else
                  (params[:page].to_i - 1) * Kaminari.config.default_per_page
                end
          %>
          <% @validators.each do |validator| %>
            <% i += 1 %>
            <tr id="row-<%=i%>">
              <td class="avatar-column align-middle">
                <div class="avatar">
                  <% if validator.private_validator? %>
                    <div class="img-circle-medium-private">
                      <span class='fas fa-users-slash' title="Private Validator"></span>
                    </div>
                  <% elsif validator.avatar_url %>
                    <%= image_tag validator.avatar_url, class: 'img-circle-medium' %>
                  <% else %>
                    <%= image_tag 'https://keybase.io/images/no-photo/placeholder-avatar-180-x-180@2x.png', class: 'img-circle-medium' %>
                  <% end %>
                </div>
              </td>

              <td class="name-column align-middle">
                <%= link_to validator_url(network: params[:network], account: validator.account, order: params[:order], page: params[:page], refresh: params[:refresh]),
                            class: 'font-weight-bold' do %>
                  <span><%= i %>.&nbsp;</span><%= validator_display_name(validator) %>
                <% end %>
                <% unless validator.private_validator? %>
                  <small>
                    (<span class="d-inline-block d-lg-none">Commission:&nbsp;</span><%= validator.commission %>%)
                  </small>
                <% end %>
                <br />
                <span class="d-inline-block d-lg-none">Active Stake:&nbsp;</span>
                <small>
                  <%= number_with_delimiter lamports_to_sol(validator.active_stake).round(0) %>
                  (<%= number_to_percentage(validator.stake_concentration.to_f * 100.0, precision: 1) %>)
                </small>
                <br />
                <span class="d-inline-block d-lg-none">Scores:&nbsp;</span>
                <%= render 'validators/scores', validator: validator %>
                <% if validator.delinquent? %>
                  <br />
                  <small class="text-danger">delinquent</small>
                <% end %>
              </td>

              <!-- SKIPPED VOTE % -->
              <td class="chart-column align-middle">
                <% skipped_vote_percent = skipped_vote_percent(validator, @batch) %>
                <% if skipped_vote_percent %>
                  <div class="d-none d-lg-block">
                    <%= render 'validators/spark_line_skipped_vote',
                               account: validator.account,
                               value: [skipped_vote_percent, @batch.skipped_vote_all_median.to_f * 3].max,
                               chart_steps: [@batch.skipped_vote_all_median.to_f * 2, @batch.skipped_vote_all_median.to_f, 0.05],
                               min_value: @batch.skipped_vote_all_median.to_f * 3
                    %>
                    <div class="text-center text-muted small mt-2">
                      <%= number_to_percentage(skipped_vote_percent, precision: 2) %>
                    </div>
                  </div>
                <% else %>
                  <span class="d-none d-lg-block text-center text-muted">N/A</span>
                <% end %>
                <span class="d-inline-block d-lg-none">
                  Skipped Vote&nbsp;%:
                  <%= skipped_vote_percent ? number_to_percentage(skipped_vote_percent, precision: 2) : "N/A" %>
                </span>
              </td>

              <!-- ROOT DISTANCE -->
              <td class="chart-column align-middle">
                <% root_distance_percent = -(validator.score&.root_distance_history.to_a[-1]) %>
                <% if root_distance_percent %>
                  <div class="d-none d-lg-block">
                    <%= render 'validators/spark_line_block_distance',
                               account: validator.account,
                               value: [root_distance_percent, @batch.root_distance_all_average.to_f * -2].max,
                               chart_steps: [@batch.root_distance_all_average.to_f * -1, @batch.root_distance_all_median.to_f * -1, 0.05],
                               min_value: @batch.root_distance_all_average.to_f * -2
                    %>
                    <div class="text-center text-muted small mt-2">
                      <%= root_distance_percent.round(2) %>
                    </div>
                  </div>
                <% else %>
                  <span class="d-none d-lg-block text-center text-muted">N/A</span>
                <% end %>
                <span class="d-inline-block d-lg-none">
                  Root Distance:
                  <%= root_distance_percent ? root_distance_percent : "N/A" %>
                </span>
              </td>

              <!-- VOTE DISTANCE -->
              <td class="chart-column align-middle">
                <% vote_distance_percent = -(validator.score&.vote_distance_history.to_a[-1]) %>
                <% if vote_distance_percent %>
                  <div class="d-none d-lg-block">
                    <%= render 'validators/spark_line_vote_distance',
                               account: validator.account,
                               value: [vote_distance_percent, @batch.vote_distance_all_average.to_f * -2].max,
                               chart_steps: [@batch.vote_distance_all_average.to_f * -1, @batch.vote_distance_all_median.to_f * -1, 0.05],
                               min_value: @batch.vote_distance_all_average.to_f * -2
                    %>
                    <div class="text-center text-muted small mt-2">
                      <%= vote_distance_percent.round(2) %>
                    </div>
                  </div>
                <% else %>
                  <span class="d-none d-lg-block text-center text-muted">N/A</span>
                <% end %>
                <span class="d-inline-block d-lg-none">
                  Vote Distance:
                  <%= vote_distance_percent ? vote_distance_percent : "N/A" %>
                </span>
              </td>

              <!-- SKIPPED SLOTS  -->
              <td class="chart-column align-middle">
                <% skipped_slots_moving_average = -(validator.score&.skipped_slot_moving_average_history.to_a[-1].to_f*100.0) %>
                <%#= TODO count md & avg in background job %>
                <% chart_average = @skipped_slot_average*100.round(2) %>
                <% chart_median = @skipped_slot_median*100.round(2) %>
                <% if skipped_slots_moving_average %>
                  <div class="d-none d-lg-block">
                    <%= render 'validators/spark_line_skipped_slots',
                               account: validator.account,
                               value: [skipped_slots_moving_average, chart_median.to_f * -2].max,
                               chart_steps: [chart_average.to_f * -1, chart_median.to_f * -1, 0.05],
                               min_value: chart_median.to_f * -2
                    %>
                    <div class="text-center text-muted small mt-2">
                      <%= number_to_percentage(skipped_slots_moving_average, precision: 2) %>
                    </div>
                  </div>
                <% else %>
                  <span class="d-none d-lg-block text-center text-muted">N/A</span>
                <% end %>
                <span class="d-inline-block d-lg-none">
                  Skipped Slot&nbsp;&percnt;:
                  <%= skipped_slots_moving_average ? number_to_percentage(skipped_slots_moving_average, precision: 2) : "N/A" %>
                </span>
              </td>
            </tr>

            <% if params[:order] == 'stake' && i == @at_33_stake_index %>
              <tr class="heading-secondary text-warning text-center">
                <td colspan=6>
                  CUMULATIVE STAKE ABOVE CAN HALT THE NETWORK -- IMPROVE DECENTRALIZATION AND DELEGATE TO VALIDATORS BELOW
                </td>
              </tr>
            <% end %>
          <% end %>
          </tbody>
        </table>

        <div class="px-15">
          <p class="small muted">
            Score updated at <%= @batch&.created_at || 'N/A' %> in batch <%= @batch&.uuid || 'N/A' %>
          </p>
          <%= paginate @validators %>
        </div>


      </div>
    </div>
  </div>
<% end %>

<% unless @validators.empty? %>
  <div class="row">
    <%= render 'validators/software_versions' %>
    <%= render 'validators/stats' %>
  </div>
<% end %>