<%= javascript_pack_tag 'account_authority_histories/index.js' %>

<h1 class="page-header"><%= params[:network].capitalize %> Vote Account</h1>

<div class="card">
  <div class="card-content pb-0">
    <h2 class="h4 card-heading">Account Details</h2>
  </div>
  <table class='table table-block-sm mb-0'>
    <tbody>
    <tr>
      <td><strong>Network:</strong></td>
      <td><%= params[:network] %></td>
    </tr>
    <tr>
      <td><strong>Vote Account:</strong></td>
      <td><%= @vote_account.account %></td>
    </tr>
    <tr>
      <td><strong>Identity Account:</strong></td>
      <td>
        <%= link_to @vote_account.validator.account, validator_url(
          network: params[:network],
          account: @vote_account.validator.account
        ), "data-turbolinks": false %>
      </td>
    </tr>
    <tr>
      <td><strong>Commission:</strong></td>
      <td><%= @vote_account.vote_account_histories.last.commission rescue 'N/A' %> &percnt;</td>
    </tr>
    <tr>
      <td><strong>Authorized Withdrawer:</strong></td>
      <td><%= @vote_account.authorized_withdrawer %></td>
    </tr>
    <tr>
      <td><strong>Authorized Voters:</strong></td>
      <td><%= @vote_account.authorized_voters %></td>
    </tr>
    </tbody>
  </table>
</div>

<% if @stake_history.any? %>
  <div class="row">
    <div class="col-8 mb-4">
      <div class="card h-100">
        <div class="card-content pb-3">
          <h2 class="h4 card-heading">Stake Stats</h2>

          <%
            num_of_records = @stake_history.count
            delegated_stake_vector = @stake_history.map { |stake| lamports_to_sol(stake.delegated_stake).round(2) }.reverse
            active_stake_vector = @stake_history.map { |stake| lamports_to_sol(stake.active_stake).round(2) }.reverse
            epochs = @stake_history.pluck(:epoch).reverse
          %>
          <%= render 'vote_accounts/stats_chart',
                    chart_name: "stake-stats-chart",
                    line_color: GREEN,
                    epochs: epochs,
                    delegated_stake_vector: delegated_stake_vector,
                    active_stake_vector: active_stake_vector
          %>
        </div>
      </div>
    </div>
    <div class="col-4 mb-4">
      <div class="card h-100">
        <div class="card-content pb-3">
          <h2 class="h4 card-heading">Last Epoch</h2>
        </div>
        <table class='table table-block-sm mb-0'>
          <tbody>
            <tr>
              <td><strong>Delegated Stake:</strong></td>
              <td><%= number_with_delimiter lamports_to_sol(@stake_history.last.delegated_stake).round(2) %> SOL</td>
            </tr>
            <tr>
              <td><strong>Active Stake:</strong></td>
              <td><%= number_with_delimiter lamports_to_sol(@stake_history.last.active_stake).round(2) %> SOL</td>
            </tr>
            <tr>
              <td><strong>Credits Observed:</strong></td>
              <td><%= number_with_delimiter lamports_to_sol(@stake_history.last.credits_observed).round(2) %> SOL</td>
            </tr>
            <tr>
              <td><strong>Rent Exempt Reserve:</strong></td>
              <td><%= number_with_delimiter lamports_to_sol(@stake_history.last.rent_exempt_reserve).round(2) %> SOL</td>
            </tr>
            <tr>
              <td><strong>Stake Accounts:</strong></td>
              <td><%= @stake_history.last.delegating_stake_accounts_count %></td>
            </tr>
            <tr>
              <td><strong>Deactivating Stake:</strong></td>
              <td><%= number_with_delimiter lamports_to_sol(@stake_history.last.deactivating_stake).round(2) %> SOL</td>
            </tr>
          </tbody>
      </table>
    </div>
  </div>
<% end %>


<% if params[:network] == "mainnet" %>
  <%= render "stake_accounts" %>
<% end %>

<div id="authority-histories" vote_account="<%= @vote_account.account %>"></div>

<div class="card mb-4">
  <div class="card-content pb-0">
    <h2 class="h2 card-heading">Recent Activity</h2>
  </div>
  <%= render partial: 'vote_account_histories_table' %>
</div>

<%= link_to 'Back to All Validators',
            validators_path(network: params[:network]),
            class: 'btn btn-sm btn-secondary' %>
