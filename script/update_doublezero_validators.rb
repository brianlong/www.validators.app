# frozen_string_literal: true

require File.expand_path('../config/environment', __dir__)

DOUBLEZERO_IPS = [
  "64.130.32.242", "64.130.52.201", "64.130.62.38", "103.50.32.128", "67.213.120.9", "65.19.161.132", "45.77.142.108", "64.130.58.6",
  "37.122.252.22", "208.91.110.197", "70.34.211.174", "85.195.100.119", "23.92.79.26", "65.20.105.212", "64.130.49.181", "64.130.49.117",
  "88.216.197.27", "147.28.165.79", "23.109.62.84", "89.111.15.150", "65.20.100.233", "192.69.209.194", "177.54.154.15", "81.16.188.250",
  "209.38.103.172", "69.67.151.19", "67.213.122.45", "189.1.171.173", "207.121.26.12", "109.94.99.139", "64.130.32.115", "64.130.52.135",
  "173.231.41.194", "185.209.178.161", "104.237.53.202", "185.92.120.151", "57.128.64.53", "64.130.32.60", "64.130.49.67", "69.67.149.97",
  "93.115.25.190", "72.46.85.217", "136.244.108.105", "149.28.34.6", "66.165.246.46", "66.45.251.114", "46.17.103.70", "67.209.52.136",
  "64.130.32.133", "64.130.55.254", "140.82.20.6", "57.129.87.228", "38.129.137.238", "149.28.38.64", "188.214.130.71", "81.16.184.251",
  "45.250.255.163", "72.46.84.221", "194.126.172.174", "84.32.186.77", "64.130.32.77", "64.130.32.241", "149.28.255.82", "177.54.159.47",
  "109.94.97.111", "88.211.249.212", "208.91.107.71", "64.130.49.180", "202.8.9.28", "177.54.154.235", "103.106.59.199", "8.244.152.28",
  "188.214.130.97", "31.172.68.190", "45.63.111.115", "194.126.172.242", "89.42.231.199", "67.213.122.59", "173.214.163.54", "198.244.165.235",
  "15.235.228.93", "38.97.60.51", "72.46.87.231", "66.206.2.170", "195.12.227.249", "160.202.131.117", "144.168.36.130", "5.255.78.21",
  "195.12.228.194", "88.216.198.169", "64.130.52.205", "213.163.64.140"
]

logger = Logger.new('log/update_doublezero_validators.log')
logger.info("Updating DoubleZero validators...")

doublezero_validators_ids = []

begin
  DOUBLEZERO_IPS.each do |ip_address|
    ValidatorIp.where(is_active: true, address: ip_address).find_each do |validator_ip|
      next unless validator_ip.validator_id.present?

      doublezero_validators_ids << validator_ip.validator_id
    end
  end

  Validator.where.not(id: doublezero_validators_ids).update_all(is_dz: false)
  Validator.where(id: doublezero_validators_ids).update_all(is_dz: true)

  logger.info("DoubleZero validators updated successfully: #{doublezero_validators_ids}")
rescue StandardError => e
  logger.error("Failed to update DoubleZero validators: #{e}")
  Appsignal.send_error(e)
end
